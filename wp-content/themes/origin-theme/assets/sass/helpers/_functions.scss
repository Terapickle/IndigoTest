
//
// Grid
// --------------------

@function get-breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function get-breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

@function get-breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: get-breakpoint-next($name, $breakpoints);
    @return if($next, get-breakpoint-min($next, $breakpoints) - 1px, null);
}

//
// Colors
// --------------------

@function get-color-variant($color, $variant: 'base') {
    @if $variant == 'lightest' {
        @return lighten($color, $color-shift*3);
    } @elseif $variant == 'lighter' {
        @return lighten($color, $color-shift*2);
    } @elseif $variant == 'light' {
        @return lighten($color, $color-shift);
    } @elseif $variant == 'dark' {
        @return darken($color, $color-shift);
    } @elseif $variant == 'darker' {
        @return darken($color, $color-shift*2);
    } @elseif $variant == 'darkest' {
        @return darken($color, $color-shift*3);
    } @else {
        @return $color;
    }
}

//
// Misc
// --------------------

@function encode-hex($string) {
    @if type-of($string) == 'color' {
        $hex: str-slice(ie-hex-str($string), 4);
        $string:unquote("#{$hex}");
    }
    $string: '%23' + $string;
    @return $string;
}
